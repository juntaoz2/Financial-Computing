The 3 attached files are from the Daniel Duffy's book, Introduction to C++ for Financial Engineers, for calculating EurOption options with BS formula. Please create a project with these 3 files and complete following 3 tasks:

Question 1: 

1. Move data into private section
2. Remove init() and copy() functions. Implement them directly in constructor
3. Use char point and dynamic allocation to replace the stl string, optType. Make sure no memory leak
4. Make function n() and N() as private functions

Question 2:

Calculate the price of a three-month European put option on a non-dividend-paying stock with a strike price of $50 when the current stock price is $50, the risk-free interest rate is 10% per annum, and the volatility is 30% per annum.


Question 3: What difference does it make to your calculations in Question 2 if a dividend of $1.50 is expected in two months? 

You could change or write your own TestEuropeanOption.cpp for question 2 and 3.

Hint: Question 2 and 3 are from John Hull's Options, Futures, and Other Derivatives. You could check John Hull's book for the way to solve the questions and implement them using Daniel Duffy's codes.

The following is expected result for Question 2 and 3:

-------------

/*
Call option on a stock : 2.13293
HW Q2 : 2.37561
U = 48.5248
HW Q3 : 3.03039
Press any key to continue . . .
*/

